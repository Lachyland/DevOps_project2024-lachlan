name: Automatic Testing for Resource Management Web App

on:
  push:
    branches:
      - main  # Workflow will be triggered whenever there is a push in main branch

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code from GitHub Repo
        uses: actions/checkout@v3
        
      - name: Setup Node.js in Ubuntu
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Remove existing node_modules folder from cloned project
        run: rm -rf /home/runner/work/DevOps_project2024-lachlan/DevOps_project2024-lachlan/node_modules/*
        
      - name: Install dependencies for based on package.json
        run: npm install
        
      - name: Run tests in "tests" folder
        run: npm run backend-test
        
      - name: Instrument the frontend code
        run: npm run frontend-instrument
       
      - name: Run the frontend test cases
        run: npm run frontend-test

build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_Username }}
          password: ${{ secrets.DOCKER_password }}
 
      - name: Build and Push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: DockerFile
          push: true
          tags: ${{ secrets.DOCKER_Username }}/lachlan-docker-img:latest
         
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
 
      - name: Set up AKS cluster
        run: |
          az aks show --resource-group lachlanResourceGroup --name lachlanAKSCluster -o json >nul 2>nul || az aks create --resource-group lachlanResourceGroup --name lachlanAKSCluster --node-count 1 --generate-ssh-keys 2>&1
 
      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group lachlanResourceGroup --name lachlanAKSCluster --overwrite-existing
 
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f rms-deployment.yaml
          kubectl apply -f rms-service.yaml
 
      - name: Verify Deployment
        run: |
          kubectl rollout history deployment/lachlan-deployment
          kubectl get pods
          kubectl get services